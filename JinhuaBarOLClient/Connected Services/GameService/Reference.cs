//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace JinhuaBarOLClient.GameService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IGameService", CallbackContract=typeof(JinhuaBarOLClient.GameService.IGameServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Login", ReplyAction="http://tempuri.org/IGameService/LoginResponse")]
        bool Login(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Login", ReplyAction="http://tempuri.org/IGameService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/ShowInformation", ReplyAction="http://tempuri.org/IGameService/ShowInformationResponse")]
        string ShowInformation(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/ShowInformation", ReplyAction="http://tempuri.org/IGameService/ShowInformationResponse")]
        System.Threading.Tasks.Task<string> ShowInformationAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/CteateRoom", ReplyAction="http://tempuri.org/IGameService/CteateRoomResponse")]
        void CteateRoom(string name, bool isOffLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/CteateRoom", ReplyAction="http://tempuri.org/IGameService/CteateRoomResponse")]
        System.Threading.Tasks.Task CteateRoomAsync(string name, bool isOffLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/ShowRoomList", ReplyAction="http://tempuri.org/IGameService/ShowRoomListResponse")]
        string ShowRoomList(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/ShowRoomList", ReplyAction="http://tempuri.org/IGameService/ShowRoomListResponse")]
        System.Threading.Tasks.Task<string> ShowRoomListAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/JoinRoom", ReplyAction="http://tempuri.org/IGameService/JoinRoomResponse")]
        string JoinRoom(string name, string roomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/JoinRoom", ReplyAction="http://tempuri.org/IGameService/JoinRoomResponse")]
        System.Threading.Tasks.Task<string> JoinRoomAsync(string name, string roomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/LeaveRoom", ReplyAction="http://tempuri.org/IGameService/LeaveRoomResponse")]
        string LeaveRoom(string name, string roomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/LeaveRoom", ReplyAction="http://tempuri.org/IGameService/LeaveRoomResponse")]
        System.Threading.Tasks.Task<string> LeaveRoomAsync(string name, string roomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/StartGame", ReplyAction="http://tempuri.org/IGameService/StartGameResponse")]
        string StartGame(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/StartGame", ReplyAction="http://tempuri.org/IGameService/StartGameResponse")]
        System.Threading.Tasks.Task<string> StartGameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/ResetGame", ReplyAction="http://tempuri.org/IGameService/ResetGameResponse")]
        string ResetGame(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/ResetGame", ReplyAction="http://tempuri.org/IGameService/ResetGameResponse")]
        System.Threading.Tasks.Task<string> ResetGameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/test", ReplyAction="http://tempuri.org/IGameService/testResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(JinhuaBarOLLib.CardType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(JinhuaBarOLLib.Card[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(JinhuaBarOLLib.Card))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(JinhuaBarOLLib.Suit))]
        JinhuaBarOLLib.Player test(JinhuaBarOLLib.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/test", ReplyAction="http://tempuri.org/IGameService/testResponse")]
        System.Threading.Tasks.Task<JinhuaBarOLLib.Player> testAsync(JinhuaBarOLLib.Player player);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/ShowMessage")]
        void ShowMessage(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/PlayerControl", ReplyAction="http://tempuri.org/IGameService/PlayerControlResponse")]
        string PlayerControl();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/ClearScreen")]
        void ClearScreen();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : JinhuaBarOLClient.GameService.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.DuplexClientBase<JinhuaBarOLClient.GameService.IGameService>, JinhuaBarOLClient.GameService.IGameService {
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Login(string name) {
            return base.Channel.Login(name);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string name) {
            return base.Channel.LoginAsync(name);
        }
        
        public string ShowInformation(string name) {
            return base.Channel.ShowInformation(name);
        }
        
        public System.Threading.Tasks.Task<string> ShowInformationAsync(string name) {
            return base.Channel.ShowInformationAsync(name);
        }
        
        public void CteateRoom(string name, bool isOffLine) {
            base.Channel.CteateRoom(name, isOffLine);
        }
        
        public System.Threading.Tasks.Task CteateRoomAsync(string name, bool isOffLine) {
            return base.Channel.CteateRoomAsync(name, isOffLine);
        }
        
        public string ShowRoomList(string name) {
            return base.Channel.ShowRoomList(name);
        }
        
        public System.Threading.Tasks.Task<string> ShowRoomListAsync(string name) {
            return base.Channel.ShowRoomListAsync(name);
        }
        
        public string JoinRoom(string name, string roomName) {
            return base.Channel.JoinRoom(name, roomName);
        }
        
        public System.Threading.Tasks.Task<string> JoinRoomAsync(string name, string roomName) {
            return base.Channel.JoinRoomAsync(name, roomName);
        }
        
        public string LeaveRoom(string name, string roomName) {
            return base.Channel.LeaveRoom(name, roomName);
        }
        
        public System.Threading.Tasks.Task<string> LeaveRoomAsync(string name, string roomName) {
            return base.Channel.LeaveRoomAsync(name, roomName);
        }
        
        public string StartGame(string name) {
            return base.Channel.StartGame(name);
        }
        
        public System.Threading.Tasks.Task<string> StartGameAsync(string name) {
            return base.Channel.StartGameAsync(name);
        }
        
        public string ResetGame(string name) {
            return base.Channel.ResetGame(name);
        }
        
        public System.Threading.Tasks.Task<string> ResetGameAsync(string name) {
            return base.Channel.ResetGameAsync(name);
        }
        
        public JinhuaBarOLLib.Player test(JinhuaBarOLLib.Player player) {
            return base.Channel.test(player);
        }
        
        public System.Threading.Tasks.Task<JinhuaBarOLLib.Player> testAsync(JinhuaBarOLLib.Player player) {
            return base.Channel.testAsync(player);
        }
    }
}
